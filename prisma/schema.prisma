generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int                 @id @default(autoincrement())
  name        String
  description String
  price       Int
  image       String
  category    Category            @relation(fields: [categoryId], references: [id])
  categoryId  Int
  occasions   ProductOnOccasion[]
  orderItems  OrderItem[]
  inStock     Boolean
  rating      Float
  discount    Int
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  image       String
  slug        String
  Product     Product[]
}

model Occasion {
  id          Int                 @id @default(autoincrement())
  name        String
  description String
  image       String
  products    ProductOnOccasion[]
}

model ProductOnOccasion {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  occasion   Occasion @relation(fields: [occasionId], references: [id])
  occasionId Int

  @@id([productId, occasionId])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product? @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
}

model Order {
  id              Int           @id @default(autoincrement())
  status          OrderStatus   @default(PENDING)
  customerName    String
  customerEmail   String
  customerPhone   String
  deliveryArea    String
  deliveryAddress String
  deliveryDate    DateTime
  deliveryTime    String
  paymentMethod   String
  paymentStatus   PaymentStatus @default(PENDING)
  paymentIntentId String?
  comment         String?
  totalAmount     Int
  items           OrderItem[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Operator {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  role      Role     @default(STAFF)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

enum Role {
  ADMIN
  MANAGER
  STAFF
}
